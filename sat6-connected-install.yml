---
- hosts: satellite
  tasks:
  - name: enable satellite 6 repositories
    command: >
      subscription-manager repos
        --disable='*'
        --enable=rhel-7-server-rpms
        --enable=rhel-server-rhscl-7-rpms
        --enable=rhel-7-server-satellite-6.4-rpms
        --enable=rhel-7-server-satellite-maintenance-6-rpms
        --enable=rhel-7-server-ansible-2.6-rpms
    tags: rhsm

  - name: make sure firewalld is enabled and running
    service:
      name: firewalld
      state: started
      enabled: true
    tags: firewalld

  - name: open firewalld ports
    firewalld:
      immediate: true
      permanent: true
      state: enabled
      port: "{{ item }}"
    with_items: "{{ open_ports }}"
    tags: firewalld

  - name: make sure selinux is in enforcing mode
    selinux:
      policy: targeted
      state: enforcing
    tags: selinux

  # these tasks verify that DNS is configured properly
  # if any of these tasks fail, the installation won't complete successully

  - name: verify localhost resolution
    command: "ping -c1 localhost"
    changed_when: false
    tags: dns

  - name: verify hostname resolution
    command: "ping -c1 {{ ansible_hostname }}"
    changed_when: false
    tags: dns

  - name: verify FQDN resolution
    command: "ping -c1 {{ ansible_fqdn }}"
    changed_when: false
    tags: dns

  - name: perform yum update
    yum:
      name: "*"
      state: latest
      update_cache: true
    tags: yum

  - name: install satellite packages
    yum:
      name: satellite
      state: latest
    tags: yum

  # this task will run the satellite-installer
  # it will be run with basic configuration (no capsule services like DNS, DHCP etc)
  # more configuration can be added manually later, see "satellite-installer --scenario satellite --help" for all options
  - name: run satellite-installer (this will take a while...)
    command: >
      satellite-installer
        --scenario satellite
        --disable-system-checks
        --foreman-admin-username '{{ admin_username }}'
        --foreman-admin-password '{{ admin_password }}'
        --foreman-initial-organization '{{ organization }}'
        --foreman-initial-location '{{ locations[0] }}'
    when:
      - http_proxy_host is not defined
      - http_proxy_port is not defined
    tags: satellite-installer

  - name: run satellite-installer (this will take a while...)
    command: >
      satellite-installer
        --scenario satellite
        --disable-system-checks
        --foreman-admin-username '{{ admin_username }}'
        --foreman-admin-password '{{ admin_password }}'
        --foreman-initial-organization '{{ organization }}'
        --foreman-initial-location '{{ locations[0] }}'
        --katello-proxy-url http://'{{ http_proxy_host }}' --katello-proxy-port '{{ http_proxy-port }}'
    when:
      - http_proxy_host is defined
      - http_proxy_port is defined
    tags: satellite-installer
